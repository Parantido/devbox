[ {
  "id" : "a3ed64a1-9aa3-4039-8143-d1d0ce8ef297",
  "realm" : "master",
  "displayName" : "DevBox",
  "displayNameHtml" : "<div class=\"kc-logo-text\"><span>DevBox</span></div>",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 900,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "bruteForceStrategy" : "MULTIPLE",
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "fb707aa9-caa9-499d-b2a5-af9ccb01656b",
      "name" : "code-space-user",
      "description" : "It defines a user in the code-space service",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "a3ed64a1-9aa3-4039-8143-d1d0ce8ef297",
      "attributes" : { }
    }, {
      "id" : "e1f3bd7a-06ee-4396-9e59-1b5c978eae91",
      "name" : "default-roles-master",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "a3ed64a1-9aa3-4039-8143-d1d0ce8ef297",
      "attributes" : { }
    }, {
      "id" : "da1b1f16-cec2-43d3-a90f-fb0bea73c627",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "a3ed64a1-9aa3-4039-8143-d1d0ce8ef297",
      "attributes" : { }
    }, {
      "id" : "70b85a09-ab21-4e59-ab93-b0ec98066b79",
      "name" : "admin",
      "description" : "${role_admin}",
      "composite" : true,
      "composites" : {
        "realm" : [ "create-realm" ],
        "client" : {
          "master-realm" : [ "manage-authorization", "view-events", "manage-clients", "query-clients", "query-users", "manage-events", "view-authorization", "query-realms", "create-client", "view-clients", "impersonation", "manage-realm", "manage-users", "view-identity-providers", "view-users", "query-groups", "manage-identity-providers", "view-realm" ]
        }
      },
      "clientRole" : false,
      "containerId" : "a3ed64a1-9aa3-4039-8143-d1d0ce8ef297",
      "attributes" : { }
    }, {
      "id" : "cb4be09f-36a7-4323-9898-f568814bbeb7",
      "name" : "create-realm",
      "description" : "${role_create-realm}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "a3ed64a1-9aa3-4039-8143-d1d0ce8ef297",
      "attributes" : { }
    }, {
      "id" : "9b05e342-7064-4b34-8b30-ba5e9a72ac5d",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "a3ed64a1-9aa3-4039-8143-d1d0ce8ef297",
      "attributes" : { }
    } ],
    "client" : {
      "traefik-client" : [ {
        "id" : "357ecd5a-323d-42c7-b6a5-ed5cddfb52b2",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2e37eb20-489a-4981-adb9-00632062cc6b",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "4dd00758-98bf-4528-a954-366e9fa822a5",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e3087a90-2fce-4084-aaee-f6cd60e3f3ac",
        "attributes" : { }
      } ],
      "master-realm" : [ {
        "id" : "b0996e09-381d-4021-a3b9-9b2cf2df9894",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      }, {
        "id" : "41644183-908b-4648-bfd6-a2e5d96b2869",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      }, {
        "id" : "422a21a2-69a8-4fc3-8e54-b22fcb2fba15",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      }, {
        "id" : "c54e8f0f-5f55-4f7f-ba0d-3a2f41d52d0b",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      }, {
        "id" : "d4095b58-6401-4876-b9f7-5cd3dbab5d6d",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      }, {
        "id" : "9cfba665-ef0e-40ff-a87f-cadcc225f529",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      }, {
        "id" : "3e243176-4c18-4f4f-9f0c-e170a186012d",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      }, {
        "id" : "7443bccf-92ce-44da-bdb6-416a05eb1c9c",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      }, {
        "id" : "61c924cd-eff1-462d-bbdd-1d73e7efe46a",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      }, {
        "id" : "8c8fef99-463d-4787-a3df-9f6696df4ff5",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      }, {
        "id" : "3419803d-ecad-487e-81f9-e557af2af2df",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "master-realm" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      }, {
        "id" : "adceb240-a4a2-466c-b0c2-488c2923dd6c",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      }, {
        "id" : "de4e2a66-c0f4-4cbf-b2f6-01e2d7a872f8",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      }, {
        "id" : "7a454a78-2ce0-4739-a062-90678b0db42a",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      }, {
        "id" : "c4fe04dd-792d-47b3-8e18-f30a929d64fa",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      }, {
        "id" : "010a5188-1fba-43c8-b4b8-b0e466aa2189",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "master-realm" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      }, {
        "id" : "e5b6b60f-80f9-4e7d-af1d-364d1909d7b2",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      }, {
        "id" : "dac85146-f471-4c18-9e01-3f0ca040c6b4",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "245a0a33-e913-4f4a-b583-c149fd599f88",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "866fc3d4-8c95-4f60-98d8-f4aead28255c",
        "attributes" : { }
      }, {
        "id" : "653ae4a5-1a1e-409a-aa96-faa79e9f2674",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "866fc3d4-8c95-4f60-98d8-f4aead28255c",
        "attributes" : { }
      }, {
        "id" : "0ba79ad3-40b5-4775-a1a4-f3dbb55e875c",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "866fc3d4-8c95-4f60-98d8-f4aead28255c",
        "attributes" : { }
      }, {
        "id" : "11def1dd-ad3e-4cc0-9175-38d219faea24",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "866fc3d4-8c95-4f60-98d8-f4aead28255c",
        "attributes" : { }
      }, {
        "id" : "1389158d-6bd9-43ff-b9c7-215da5596a81",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "866fc3d4-8c95-4f60-98d8-f4aead28255c",
        "attributes" : { }
      }, {
        "id" : "3d1c421a-2170-4b17-9636-81ad9e31335a",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "866fc3d4-8c95-4f60-98d8-f4aead28255c",
        "attributes" : { }
      }, {
        "id" : "e3445270-d75e-485e-9557-3ec7ce98d445",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "866fc3d4-8c95-4f60-98d8-f4aead28255c",
        "attributes" : { }
      }, {
        "id" : "23f4576b-d1aa-4035-90c9-23ca85d8a71a",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "866fc3d4-8c95-4f60-98d8-f4aead28255c",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "e1f3bd7a-06ee-4396-9e59-1b5c978eae91",
    "name" : "default-roles-master",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "a3ed64a1-9aa3-4039-8143-d1d0ce8ef297"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "44f86140-2d3f-429a-a6d7-25213e3a0058",
    "username" : "admin",
    "emailVerified" : false,
    "attributes" : {
      "is_temporary_admin" : [ "true" ]
    },
    "createdTimestamp" : 1736006892136,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "c3c3496a-c5c7-4586-8ad5-94082ae5e73a",
      "type" : "password",
      "createdDate" : 1736006892506,
      "secretData" : "{\"value\":\"0vy2Qfxv6f7dUoE8p0fgub7EzYIydm7xSzqwqhjC3HM=\",\"salt\":\"JRsve2wj0e03eueGxSDp9A==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-master", "admin" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "27d83909-12fc-43b6-a867-390e7340d818",
    "username" : "service-account-traefik-client",
    "emailVerified" : false,
    "createdTimestamp" : 1736092779821,
    "enabled" : true,
    "totp" : false,
    "serviceAccountClientId" : "traefik-client",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-master" ],
    "clientRoles" : {
      "traefik-client" : [ "uma_protection" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "866fc3d4-8c95-4f60-98d8-f4aead28255c",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/master/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/master/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "e818b010-eee2-4230-af15-892bfce9b0f1",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/master/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/master/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "13a09026-8333-4da9-aa42-45964fe646ac",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "c0e33e09-2882-4415-ab4d-e0ad98b9e5db",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "e3087a90-2fce-4084-aaee-f6cd60e3f3ac",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "b884a0e6-41a1-484b-aeb2-d863511fea6d",
    "clientId" : "master-realm",
    "name" : "master Realm",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "attributes" : {
      "realm_client" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "cd4c052c-a09e-4845-a3a3-ce7595f1ea4d",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/master/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/master/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "0759f6b3-b3db-4b66-aa97-cb9e75b4cdcb",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "2e37eb20-489a-4981-adb9-00632062cc6b",
    "clientId" : "traefik-client",
    "name" : "DevBox Authenticator",
    "description" : "DevBox Traefik Authenticator",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "21acYYxDxcUnhNkD5JQYRMm16e1HPHfP",
    "redirectUris" : [ "https://devbox.techfusion.it/*" ],
    "webOrigins" : [ "https://devbox.techfusion.it" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : true,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1736092779",
      "backchannel.logout.session.required" : "true",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "62783700-a902-42db-a914-872cfdc091b5",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "lightweight.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ {
        "name" : "Default Resource",
        "type" : "urn:traefik-client:resources:default",
        "ownerManagedAccess" : false,
        "attributes" : { },
        "uris" : [ "/*" ]
      } ],
      "policies" : [ {
        "name" : "access-workspace",
        "description" : "Code WorkSpace Role Policy",
        "type" : "role",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "fetchRoles" : "false",
          "roles" : "[{\"id\":\"code-space-user\",\"required\":false}]"
        }
      }, {
        "name" : "Default Policy",
        "description" : "A policy that grants access only for users within this realm",
        "type" : "js",
        "logic" : "POSITIVE",
        "decisionStrategy" : "AFFIRMATIVE",
        "config" : {
          "code" : "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
        }
      }, {
        "name" : "permission-workspace",
        "description" : "Code WorkSpace Permission",
        "type" : "scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "scopes" : "[\"access-workspace\"]",
          "applyPolicies" : "[\"access-workspace\"]"
        }
      }, {
        "name" : "Default Permission",
        "description" : "A permission that applies to the default resource type",
        "type" : "resource",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "defaultResourceType" : "urn:traefik-client:resources:default",
          "applyPolicies" : "[\"Default Policy\"]"
        }
      } ],
      "scopes" : [ {
        "name" : "access-workspace",
        "iconUri" : "",
        "displayName" : "Code WorkSpace Authorization"
      } ],
      "decisionStrategy" : "UNANIMOUS"
    }
  } ],
  "clientScopes" : [ {
    "id" : "65dfd274-f110-49fe-bbaa-ea29bede01a4",
    "name" : "saml_organization",
    "description" : "Organization Membership",
    "protocol" : "saml",
    "attributes" : {
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "17280320-5a4f-4ebc-a69f-603636d02c98",
      "name" : "organization",
      "protocol" : "saml",
      "protocolMapper" : "saml-organization-membership-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "9fc54cb4-f617-4850-b347-360e07a9267b",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "79bc30a3-8f19-4f80-a617-195dada6a225",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "8ca25447-d422-4ca9-811a-b1e7069ec8cc",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "48044a6f-a6bc-4e8e-b1e2-b60fe54da330",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5e81fde8-a8fe-4c93-9a5f-e9033205f3a8",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "e975db04-7990-484c-8ab5-7bb77e5d5471",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "acce94d2-ff56-460d-8ed8-305e00eef879",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "bd2972af-8eeb-4893-8027-ef070276e910",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "a777e269-a103-45ae-ac82-ac7e4fa68fba",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "2cb01a46-a409-4dd6-b4d2-831183481656",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "a7077f7e-ec71-4e9e-88c9-9e500812d663",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "access.token.claim" : "true",
        "introspection.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "69022926-dea6-47aa-91d1-3846ee53bca7",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "b5fc1776-7aa1-4c96-a0be-45fb7667ea5d",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "d9e743c5-00fe-4c66-a971-d5c28e6bcafe",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "access.token.claim" : "true",
        "introspection.token.claim" : "true"
      }
    }, {
      "id" : "7dfcd3bd-7921-4e7d-84bd-c9f41e2efa92",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "02088eca-b385-4ea5-8050-de0a85f7edc3",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "b00f3995-d36b-4456-8694-7c4683c41be6",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "introspection.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "a436c57e-13c1-4beb-8763-b3b1af010c25",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "e4d69f98-cbe1-4ad5-bab9-8fc913528163",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "02cf1d37-48af-48cd-9f7d-cf007192c750",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a128e6fe-8b47-452a-954b-a350b60b5ef9",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7006bc36-dcea-4517-9da8-2eb7511cab82",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "37a95069-8d71-4fe1-abb2-6ff5178eff97",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "43cb797c-adba-4da3-a959-916ca2ba6bbf",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2c7d7e6a-b6a3-4131-a855-303a46540a73",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4f11c858-541d-431a-bc36-c7a95ecc3a66",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f5b2d7ad-49d8-427a-a545-14bc735e65b3",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3fbb5a71-e56e-4ff4-890e-a90b89d999f2",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "66c71b89-4ed4-498b-91a5-1bd4f75c2f4c",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d5bd3266-3407-422e-8485-793135a2443f",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "07346f91-a387-437e-a844-3ea7e54da8f2",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "dee2ffe5-9fe8-4ebf-a7e5-e7b6f7a36d53",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    } ]
  }, {
    "id" : "a25acba4-e27f-4db0-9aa9-0f6de87da255",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "546d675f-21ba-4e0e-a1bb-8b097eaa63b8",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "0a3ca012-0fa1-4e71-bab4-a5a1194d1939",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "6fe19507-3577-4c01-b995-d90e32a538f4",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "c893063f-5800-4ce6-b320-cbd6906b1d9a",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "65544990-e298-4422-955b-406bdd17d096",
    "name" : "organization",
    "description" : "Additional claims about the organization a subject belongs to",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${organizationScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "7c333d51-a462-4409-975a-3be6332f35bd",
      "name" : "organization",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-organization-membership-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "organization",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "43392740-565e-444b-a7a8-ac27db7b097d",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "5133249e-7ccc-4a73-9502-5ff5cf52e766",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "dc962bc7-7ec5-4139-96c9-4040e42cda5b",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "access.token.claim" : "true",
        "introspection.token.claim" : "true"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "acr", "web-origins", "saml_organization", "roles", "role_list", "profile", "basic", "email" ],
  "defaultOptionalClientScopes" : [ "offline_access", "organization", "address", "microprofile-jwt", "phone" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "2dc15cb0-0694-49ec-957e-16530d2dd344",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "6f99ccf3-686f-40e1-bfa7-eac18c16419e",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-property-mapper", "oidc-address-mapper", "saml-role-list-mapper", "oidc-full-name-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper", "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper" ]
      }
    }, {
      "id" : "af110013-bff8-4ec9-8f42-df6590afe494",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "d031ead5-0805-40c8-ab67-ae1d52a3acf5",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "c2ad0034-97d4-4f80-bb49-36fd8728be2f",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "d176744a-05f8-47df-999a-b1f6212d632f",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-role-list-mapper", "oidc-usermodel-property-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "saml-user-attribute-mapper", "oidc-full-name-mapper" ]
      }
    }, {
      "id" : "6ee94271-021b-4a3a-b2c3-4c30fede8e35",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "1ee7ce12-e63a-4061-8b68-6eaacec62a77",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    } ],
    "org.keycloak.userprofile.UserProfileProvider" : [ {
      "id" : "d95036af-fa03-4620-8764-c60266e2fd94",
      "providerId" : "declarative-user-profile",
      "subComponents" : { },
      "config" : {
        "kc.user.profile.config" : [ "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "4750a89c-2d5a-48e6-be3f-ef6cf9c288df",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAmZJPiZaLvnFGZ6H+YcBgL8bHYV97xFkSqmX/gDqeZS/RKDrDo+vg13g1gzwM6E+gNanp5KXIPHwisV+1aUMrOb0SDjOr2/Efs4rJc7CnJ8AEoOXKiSQ0CO4QNr7veu7hFVdVT4StaIw1d2r2b4U62vWsMmHA+EY2IYRs6S40HMuLYfnBlrDou9+zKw0t7ffzRZHuCirpz1VgG+zJJi4TxrGUi6S32CyQZmEm1eztHGj7W2adLsU+J7pHQpZAHgLX0l2QrwUj5FPtrpQdVYYEDWr5BSjvDzBdhTyj5joSF0lj/z1Y3SZzFQjASV4STYONCLoeHwYKVd94lTuF450tBQIDAQABAoIBAB9pYuV0qp7IkqsN4ndiHwqGsS+ElU9DHONHu6wh0VZHIpQE+RFlZPcNunxeYxF9f/qaB6JiGoPsrDf1qKigOY400yWegg+Z0W8q+yuzvW0PBKNYfUXx5sbQ0vYvtdJCXD2+QE/khoe07hbABSooaTJyP8eKYSsnSVkvugs0DSq6UmU9jgdIigQ3RsM6S4gP8EU0IZrraJU/d0hegFRvEQ+eWbXRfua4NDs3R26CzpTJ7XdNKqKDL5fbqjjzAzipsWFRfXv7GRhgQ6hgDrL/HBzXETSPmjcedmkktMyz+o1o6uyQLPTCCtsxwN6oBMTsI2mPKnjSE5mSerJ0V5EVRp0CgYEAyqkqSgujlimzMBQ9yjs7EMhkh3f4/NHL3yMxx+NN/AiV/sT3I/B/0vJWL48j/oR7vBG172uX1RnLlFGj+y/VwFQwktJhg6Ujn71t5ER+OTWvQMZiWwVpKnIdFmnHueKZ1/DP2RlaBvw/kOUl4E4+16ruCeDWkcGHXLdR+7Pax6sCgYEAwf2efwhM/MVx1fsn8s6SopFClVIHFK5lklCtjAr9KybKpOrEojRszZUg+QmXqLlWX47ZQwiPvZj5ra19co9lyn38vIVVhC8LaGEuCEWSJoyU7p9azA5ZOhJlM6nYZVtA3x7jQzVZ9cjBnxCh7eDFjUltqUKCkxzGLkwLwwgAbg8CgYEAsBd3QGmGlebb5O3hlsQKmZWWDEPJnFvrCpL5IVc3nsQTGREqMRc66h9Zle+JdhDFtu+op0VU43yLcO/TTWIOGBTPM/QLeSjXoGgngU2mY61q/xyhv7ce3xvSfHQjcDgeNwzufRRTLnil/w+s7o7uedTzCrBLoNCI/p3nZY6sjgsCgYAExMI/pymVURkyRGFAA7nxCxcS6phH9t2CUj9h4OdGR0bV9PtubVF7YD4WQRkcSaoI4U8P6cb2xyrkDQ63YTUEXEJ5M+HdRPbH0xO5mlQ0ZGJI11v5BiVFWyxnr7YlD7Axi+XUQhx7ATtZOKRyX4MbrQFoFr109lEc1Du5yJmSGwKBgD6kNySxl7aqfK7fLSkej4GwmAuUvtzWERezzq9zn3vx+rojfhRxwbZZXtCbxKnYU9xkjfHUyN0n35ND32rpztLu3xWZQBd0cqnBbl1Y6dZpM9iEVucswVqKDgs6E67P7KND+REyr/T29nGAJ51ed11q07AOEnNqR0PRgQISWny+" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICmzCCAYMCBgGUMhL5yzANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjUwMTA0MTYwNjMxWhcNMzUwMTA0MTYwODExWjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCZkk+Jlou+cUZnof5hwGAvxsdhX3vEWRKqZf+AOp5lL9EoOsOj6+DXeDWDPAzoT6A1qenkpcg8fCKxX7VpQys5vRIOM6vb8R+zislzsKcnwASg5cqJJDQI7hA2vu967uEVV1VPhK1ojDV3avZvhTra9awyYcD4RjYhhGzpLjQcy4th+cGWsOi737MrDS3t9/NFke4KKunPVWAb7MkmLhPGsZSLpLfYLJBmYSbV7O0caPtbZp0uxT4nukdClkAeAtfSXZCvBSPkU+2ulB1VhgQNavkFKO8PMF2FPKPmOhIXSWP/PVjdJnMVCMBJXhJNg40Iuh4fBgpV33iVO4XjnS0FAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAE8I/JP/xIandeTomDD8j0gocJH8v3H/jQI3DiN9xPQnCWynP50YA/uLw/dIN2zKioclo6aiYP8/6gbAeL9SGwCG9hLsmKKg0sI1ACkGSwsh14gK1Lvdx//JWmt7r//B3MC91Hbq35tX1Dk7W/BNS2K11CzG0FPV1V/xdY6yQbbuKOI5QAcTGD5ZE89+tTN/Re71b0WKYJ2PqmWF6mh+pwewzeR0XzrQBaLzbPc8mRmXGfYuG26/f73+LWes9NB8lkyUPr7BICWGtrUE4jSUlnB7w8CcEBraRCv10TTpl/pgszAKmWjwQnG8GZ4UgqD4qLvYMJX1OeS65SlhEDcs2Ys=" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "ab15a99e-632c-4b2f-908d-595a31ce1682",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAmsos0S6uFM57KVfP/QFljqrkNzGNn0Nm8LKGITUAfYxuTvaRljurYiXes6c1Ft13G5azOJ4cRb2Do4HqnsNwAVt6cTWNuytl7njUfV5xRbcdBaDz1mIeRxQB+cFXwIoDgfZIbRYCB6dYwfhTrfe64pn+zOGLSPAJ3wJtrDQtUx8Nczk5QPmw1w7OCqbHYcN/AtVIftHR3mTZTEboY4OwivDw/JOS4mjC/rjXjzkMQpfZO6oPB4FKnZToEs4GAI5T00JnJJKuRE78edKKHP4FrQ9FYFGHcdeyXzj5heBqquelgTk1lvuy3nm2pWkznJeNehORthTssKTt4uI0pvSEHwIDAQABAoIBAEBJCwftTRsTDg+DirvW4qi3zIQnrlugkJYSbqZH7uY1dnKQ8LHmIi1m8PDH1sKiQ59PnSs8bx1/sbYsdJZvMIs/xMBTr4M2aOT7hbRzjrOXcxQtXleA9HYslw11AM7UAtTsxfOYGku3cqNMUOSFaDZIIoxQd5pZJqBZz9ae7NwB+ij4nB2Nir/fF5KNwylKlIQMWU/9cNC2jcgpKvODrOqj9noMmCZ6njsunNf/rrzI98lfCkQWAMslK1XZOCm5VmPIpa0v/5diLAIbaGT60EClVEZrpXXGjmuYh3ITqf2FPluRMB+/i+dS8AdJ5X8Ab1f8S2FM1NCLpF+8HSVOkCECgYEAx5IJ9L+1ddemOj9SLD+96QXDkQk6e2O7dYI2Yl3feLtFXBToQ7T6SQy5AlVSXH5c/FPxU6kjXGxlFK3KvXFuaTs+oTcxsa7y+i+VMmX1S0+5+dOxkB3ZzzaS2xqWsieJGEYJ99QeRoE2Kq4aG+F498zjjaRrG131PIo73N4zXNkCgYEAxo6sCAHJfD1y7bu+C3Z3mgbrBzvj93Gx2aJOy+rnsHZnRKNRham/K1EeedYQ1dXz5vJ0eEvpJJoPFweXfu7b5PpBWM5EtM5gxhxYmF1xwem0lVj4ar1QmQqshgsr9gOmORm0gHmskv58V+62hwcUSrEMF7r62s9EjhTUzEljLbcCgYAb3okFZMAydKsB91XCWCRtJiDpYCCKmqLTBhwSIInUklJdSY4l5mANU3mCmeemgv75Pb+1rykA/yIegSaOzghdKajVWp/V8Fh+F6b+Ir7ehYOzH5zsQz7ncPeRIWVp+5tpiF5b/YM81U57J1T+D76U3Efqv8s1Rym4CpXRgjYqAQKBgQCZHi7l4dLp/00grbYJiusCmbEnG/VZvZCkPzk6ocTX3QcX9EYKqHNmySCSXhUPgfWbtH9CwW9iLXfTj6QxW6uxcZdxD2gGclxIilV78humqT38KecwERwVWRjgKb9V8Ux/HiaHKM1/ccab3NdfW4M3cj7cEfIfSNUaKFBN1Y4pEwKBgCLZ5RoOxJn9MsHCkH7pM+jm1urgmhxNzQjftBlJGB0w6ejQ+K9U5/PMTdbtFb/r6z3N9ZUsapQd5VLUaPc/QSGj53TFCJSzvqECcBEhktIYo3p9gV8APkYs62KwG0BzmwcIxhRhz0CIfNlvPTpVM4NRN22FwAv+d88a+IICCwnx" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICmzCCAYMCBgGUMhL38TANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjUwMTA0MTYwNjMxWhcNMzUwMTA0MTYwODExWjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCayizRLq4UznspV8/9AWWOquQ3MY2fQ2bwsoYhNQB9jG5O9pGWO6tiJd6zpzUW3XcblrM4nhxFvYOjgeqew3ABW3pxNY27K2XueNR9XnFFtx0FoPPWYh5HFAH5wVfAigOB9khtFgIHp1jB+FOt97rimf7M4YtI8AnfAm2sNC1THw1zOTlA+bDXDs4Kpsdhw38C1Uh+0dHeZNlMRuhjg7CK8PD8k5LiaML+uNePOQxCl9k7qg8HgUqdlOgSzgYAjlPTQmckkq5ETvx50ooc/gWtD0VgUYdx17JfOPmF4Gqq56WBOTWW+7LeebalaTOcl416E5G2FOywpO3i4jSm9IQfAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAHUPK4XW3CVofuNNb5mooQJmMvkjeE0ejC6CsEF4Qowg/8wnTHuEJF3Ea9oAuObgtOf2CQzTCMMQC4k9hqX0fCEDIlHbN4zNrgvm6U05Bfyzp8Cx5SrBObobH/9LJDTply7rZYp4b/pbuc4JjwTBTBOTT+1kwCyJja2nyz2iRTkZlkB5c4yEocY1nkktK+inXok/Z7hc41Cjhk1e3MXs0gws9f131mnSObo9CMBgIT4a+kKpMgmds21t61r+ldWGO+moucuGFVvS553wLtQzhwT9UW52MODIbUbr0dY2PkqmCTqMG3qrJHtw4pcux4ujgI6VapkDJpnULSW06mae6GQ=" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "62b03aeb-47dd-4b5e-aaab-c88f2dacf8dd",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "434b0720-1330-4091-a9b5-c34c56f1bc26" ],
        "secret" : [ "f_sXK3QzSad02mPii6I9oeuuVSgvFsmhAh2A4KDW-OZSMwl8rtfYpHNIocQa11bxWd-xD7NpivnHh1oKr0FMeYjMfMs1nBVgwEBgdC3Y9pqjNLt29vzfp7BH8q05pBvPSvRh4iZfmce1PfHyUCUKObg15g4EKM_X-bDZAPREa4Q" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    }, {
      "id" : "44ecb6c3-9c09-4fb8-bf51-5d4e0a8be38b",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "31158371-1492-4169-aee4-93e456e6eadd" ],
        "secret" : [ "q_jirB9zPv3FchCa2qRyZw" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "7228993c-b7bd-4313-a82b-bae45236f99b",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0f5ec0aa-b5c0-43dd-8281-b49685af0a6c",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c543c666-f5a7-44e6-9887-099c635ab202",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "270228d0-4c56-4ba0-8614-dcce13695f19",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0b454301-a678-45fc-8429-ee1b08f41741",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ff61ceae-a158-438d-ba67-409e0c090c8a",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "bbcaabc8-1bf3-4300-9816-d4ac9ad73239",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "989c5b7f-5df0-45d6-8569-2b13d0462149",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1dfa68fa-7793-4f52-adf5-18bfe715aaea",
    "alias" : "browser",
    "description" : "Browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d013f2fd-aba2-4f19-922e-06e960a0348e",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "fd43999c-c1ec-40d9-9655-83907f6d45b7",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "80d4c38a-3f6f-46f3-ac1a-72072a6dbcb1",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "19cff57c-7790-47c7-8dae-5dee173bac4f",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ff16c2af-cfe3-469c-a95a-091d6c40eacc",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4219fedc-8d84-46e6-b92e-f498de610d30",
    "alias" : "registration",
    "description" : "Registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0e4a8ae9-2e0e-492c-8750-6faa402aad81",
    "alias" : "registration form",
    "description" : "Registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6574570c-193e-47bd-9b9f-d99b65ab3efe",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3cc929fc-1a96-4773-b5cc-78e2050fbb3f",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "20c86c56-43dc-4c92-9c62-8e6dc9f19807",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "75586169-c33f-4295-ae53-5e457a6da378",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaAuthRequestedUserHint" : "login_hint",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email" : "",
    "actionTokenGeneratedByUserLifespan.verify-email" : "",
    "clientOfflineSessionIdleTimeout" : "0",
    "actionTokenGeneratedByUserLifespan.execute-actions" : "",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false",
    "cibaExpiresIn" : "120",
    "oauth2DeviceCodeLifespan" : "600",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "organizationsEnabled" : "false",
    "shortVerificationUri" : "",
    "actionTokenGeneratedByUserLifespan.reset-credentials" : ""
  },
  "keycloakVersion" : "26.0.7",
  "userManagedAccessAllowed" : false,
  "organizationsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
} ]
