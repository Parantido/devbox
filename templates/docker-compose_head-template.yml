volumes:
  local:

networks:
  tracker:
  code-space:

services:
  code-proxy:
    container_name: ${TRAEFIK_CONTAINER_NAME}
    image: ${TRAEFIK_IMAGE}
    restart: always
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=${TRAEFIK_DNS_PROVIDER}"
      - "--certificatesresolvers.myresolver.acme.storage=${TRAEFIK_ACME_STORAGE}"
      - "--certificatesresolvers.myresolver.acme.email=${TRAEFIK_ACME_EMAIL}"
    environment:
      - NO_PROXY=${NO_PROXY}
      - HTTP_PROXY=${HTTP_PROXY}
      - HTTPS_PROXY=${HTTPS_PROXY}
      - HETZNER_API_KEY=${TRAEFIK_HETZNER_API_KEY}
    networks:
      - tracker
      - code-space
    ports:
      - "${TRAEFIK_HTTP_PORT}:80"
      - "${TRAEFIK_HTTPS_PORT}:443"
      - "${TRAEFIK_API_PORT}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${TRAEFIK_ACME_VOLUME}:${TRAEFIK_ACME_STORAGE}

  code-db:
    container_name: ${DB_CONTAINER_NAME}
    image: ${DB_IMAGE}
    restart: always
    environment:
      - TZ=${TIMEZONE}
      - MARIADB_USER=${DB_USER}
      - MARIADB_DATABASE=${DB_NAME}
      - MARIADB_PASSWORD=${DB_PASS}
      - MARIADB_RANDOM_ROOT_PASSWORD=1
    networks:
      - tracker
    volumes:
      - ${DB_VOLUME}:/var/lib/mysql

  code-db-app:
    container_name: ${DB_APP_CONTAINER_NAME}
    image: ${DB_APP_IMAGE}
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
    ports:
      - "${DB_APP_PORT}:3306"
    networks:
      code-space:
        aliases:
          - db
    volumes:
      - ${DB_APP_VOLUME}:/var/lib/mysql

  code-db-admin:
    container_name: ${DB_ADMIN_CONTAINER_NAME}
    image: ${DB_ADMIN_IMAGE}
    restart: always
    ports:
      - "${DB_ADMIN_PORT}:80"
    networks:
      - code-space
    links:
      - code-db-app:db
    depends_on:
      - code-db-app
    environment:
      - PMA_ARBITRARY=1

  code-cache:
    container_name: ${CACHE_CONTAINER_NAME}
    image: ${CACHE_IMAGE}
    command: redis-server --save 20 1 --loglevel warning --requirepass ${CACHE_PASS}
    restart: always
    ports:
      - "${CACHE_PORT}:6379"
    networks:
      code-space:
        aliases:
          - cache
    volumes:
      - ${CACHE_VOLUME}:/data

  code-iam:
    container_name: ${IAM_CONTAINER_NAME}
    image: ${IAM_IMAGE}
    command: start-dev
    environment:
      NO_PROXY: ${NO_PROXY}
      HTTP_PROXY: ${HTTP_PROXY}
      HTTPS_PROXY: ${HTTPS_PROXY}
      KC_LOG: console
      KC_LOG_LEVEL: debug
      KC_PROXY: passthrough
      KC_HOSTNAME_PATH: /iam
      KC_HTTP_RELATIVE_PATH: /iam
      KC_HOSTNAME_STRICT: "false"
      KC_PROXY_HEADERS: xforwarded
      KC_PROXY_ADDRESS_FORWARDING: "true"
      KEYCLOAK_ADMIN: ${IAM_MGMT_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${IAM_MGMT_PASSWORD}
      KC_HOSTNAME_URL: https://${HOSTNAME}.${DOMAIN}/iam
      KC_HOSTNAME_ADMIN_URL: https://${HOSTNAME}.${DOMAIN}/iam
    networks:
      - code-space
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.code-iam.tls=true"
      - "traefik.http.routers.code-iam.entrypoints=websecure"
      - "traefik.http.routers.code-iam.tls.certresolver=myresolver"
      - "traefik.http.routers.code-iam.rule=Host(`${HOSTNAME}.${DOMAIN}`) && PathPrefix(`/iam`)"
      - "traefik.http.services.code-iam.loadbalancer.server.port=8080"
    dns: ${DNS_HOST}
    restart: always

#  code-iam-init:
#    container_name: ${IAM_CONTAINER_NAME}-init
#    image: ${IAM_IMAGE}
#    environment:
#      REALM: master
#      KEYCLOAK_ADMIN: ${IAM_MGMT_USERNAME}
#      KEYCLOAK_ADMIN_PASSWORD: ${IAM_MGMT_PASSWORD}
#      KCADM_PATH: /opt/bitnami/keycloak/bin/kcadm.sh
#      KEYCLOAK_URL: http://${HOSTNAME}.${DOMAIN}:8080
#    entrypoint: /usr/bin/bash
#    command:
#      - -exc
#      - |
#        # wait until keycloak is ready
#        while ! curl -sf "$$KEYCLOAK_URL" --output /dev/null; do
#          echo "Waiting for Keycloak to start up..."
#          sleep 5
#        done
#
#        echo "Keycloak ready"
#
#        kcadm() { local cmd="$$1" ; shift ; "$$KCADM_PATH" "$$cmd" --config /tmp/kcadm.config "$$@" ; }
#
#        # login
#        kcadm config credentials config --server "$$KEYCLOAK_URL" --realm master --user "$$KEYCLOAK_ADMIN" --password "$$KEYCLOAK_ADMIN_PASSWORD"
#
#        # create client
#        kcadm create clients -r $${REALM} -f - << EOF
#        {
#          "enabled": true,
#          "clientId": "example",
#          "publicClient": true,
#          "standardFlowEnabled": true,
#          "fullScopeAllowed": true,
#          "webOrigins": ["*"],
#          "redirectUris": ["http://localhost:*", "http://localhost:*/*", "http://127.0.0.1:*", "http://127.0.0.1:*/*" ],
#          "attributes": {
#            "access.token.lifespan": "300",
#            "post.logout.redirect.uris": "+"
#          }
#        }
#        EOF
#    depends_on:
#      code-iam:
#        condition: service_healthy

  code-tracker:
    container_name: ${TRACKER_CONTAINER_NAME}
    image: ${TRACKER_IMAGE}
    restart: always
    environment:
      NO_PROXY: ${NO_PROXY}
      HTTP_PROXY: ${HTTP_PROXY}
      HTTPS_PROXY: ${HTTPS_PROXY}
      LEAN_DEBUG: ${TRACKER_DEBUG}
      LEAN_APP_URL: https://${HOSTNAME}.${DOMAIN}
      LEAN_APP_DIR: ${TRACKER_APP_DIR}
      LEAN_SITENAME: ${TRACKER_SITENAME}
      LEAN_DB_HOST: ${TRACKER_DB_HOST}
      LEAN_DB_USER: ${DB_USER}
      LEAN_DB_PASSWORD: ${DB_PASS}
      LEAN_DB_DATABASE: ${DB_NAME}
      LEAN_DEFAULT_TIMEZONE: ${TRACKER_DEFAULT_TIMEZONE}
      LEAN_SESSION_SECURE: ${TRACKER_SESSION_SECURE}
      LEAN_SESSION_PASSWORD: ${TRACKER_SESSION_PASSWORD}
      LEAN_SESSION_EXPIRATION: ${TRACKER_SESSION_EXPIRATION}
      LEAN_EMAIL_USE_SMTP: ${SMTP_ENABLE}
      LEAN_EMAIL_RETURN: ${SMTP_RCPT}
      LEAN_EMAIL_SMTP_HOSTS: ${SMTP_HOST}
      LEAN_EMAIL_SMTP_AUTH: ${SMTP_AUTH}
      LEAN_EMAIL_SMTP_USERNAME: ${SMTP_USER}
      LEAN_EMAIL_SMTP_PASSWORD: ${SMTP_PASS}
      LEAN_EMAIL_SMTP_AUTO_TLS: ${SMTP_AUTO_TLS}
      LEAN_EMAIL_SMTP_SECURE: ${SMTP_SECURE}
      LEAN_EMAIL_SMTP_SSLNOVERIFY: ${SMTP_SSLNOVERIFY}
      LEAN_EMAIL_SMTP_PORT: ${SMTP_PORT}
    networks:
      - tracker
      - code-space
    volumes:
      - ${TRACKER_USER_VOLUME}:/var/www/html/public/userfiles
      - ${TRACKER_PUBLIC_VOLUME}:/var/www/html/userfiles
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.code-tracker.tls=true"
      - "traefik.http.routers.code-tracker.entrypoints=websecure"
      - "traefik.http.routers.code-tracker.tls.certresolver=myresolver"
      - "traefik.http.routers.code-tracker.rule=Host(`${HOSTNAME}.${DOMAIN}`) && PathPrefix(`/`)"
      - "traefik.http.services.code-tracker.loadbalancer.server.port=80"
    links:
      - code-db:code-db
      - code-cache:code-cache
    depends_on:
      - code-db

